05-Arrays 
Solutions 
By Mohamed Suleyman Ibrahim
--------------------------------------------------------------------------
1) Given a zero-based permutation nums (0-indexed), build an array ans of the same length where ans[i] = nums[nums[i]] for each 0 <= i < nums.length and return it.
   A zero-based permutation nums is an array of distinct integers from 0 to nums.length - 1 (inclusive).

  class Solution {
    public int[] buildArray(int[] nums) {
        int[] ans = new int[nums.length];
        for(int i =0; i<nums.length; i++){
            ans[i] = nums[nums[i]];
        }
        return ans;
    }

  }

__________________________________________________________________________

2) Given an integer array nums of length n, you want to create an array ans of length 2n where ans[i] == nums[i] and ans[i + n] == nums[i] for 0 <= i < n (0-indexed).
   Specifically, ans is the concatenation of two nums arrays.
   Return the array ans.

  class Solution {
    public int[] getConcatenation(int[] nums) {
        int[] ans = new int[nums.length*2];
        for(int i=0; i < nums.length; i++){
           ans[i] = nums[i];
           ans[i + nums.length] = nums[i];
        }
        return ans;
    }
  }

__________________________________________________________________________

3) Given an array nums. We define a running sum of an array as runningSum[i] = sum(nums[0]…nums[i]).
   Return the running sum of nums.

   class Solution {
    public int[] runningSum(int[] nums) {
      int[] runningSum = new int[nums.length];
      int temp = 0;
      for(int i=0; i<nums.length; i++){
          temp = temp + nums[i];
          runningSum[i] = temp;
      }
        return runningSum;

    }
  }

______________________________________________________________________

4. Richest Customer Wealth
   You are given an m x n integer grid accounts where accounts[i][j] is the amount of money the i​​​​​​​​​​​th​​​​                customer has in the j​​​​​​​​​​​th​​​​ bank. Return the wealth that the richest customer has.
A customer's wealth is the amount of money they have in all their bank accounts. The richest customer is the customer that has the maximum wealth.

  class Solution {
    public int maximumWealth(int[][] accounts) {
        int maxWealth = 0;
        for(int i = 0; i<accounts.length; i++) {
            int currentWealth = 0;
            for(int j = 0; j<accounts[i].length; j++){
               currentWealth = currentWealth + accounts[i][j];
            }
            maxWealth = Math.max(maxWealth, currentWealth);
        }
        return maxWealth;
    }
  }

___________________________________________________________________